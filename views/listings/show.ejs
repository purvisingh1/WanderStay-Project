<% layout("/layouts/boilerplate") %>

<script> 
  const mapToken="<%=process.env.MAP_KEY %>"
  const coordinates= <%- JSON.stringify(listing.geometry.coordinates) %>;
</script>
<style>
    #get-recommendations-btn {
      float: left; /* Align the button to the left */
      padding: 10px;
      font-size: 16px;
      background-color: black;
      color: white;
      border: none;
      cursor: pointer;
    }
  
    #get-recommendations-btn:hover {
      background-color: rgb(82, 78, 78);
    }
  
     /* Container for the recommendations */
  #recommendations-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); /* Grid layout */
    gap: 15px; /* Space between items */
    margin-top: 20px;
  }
    .recommendation {
      background-color: black;
      color: white;
      padding: 10px;
      margin-bottom: 10px;
      font-size: 14px;
      border-radius: 5px;
    }
  
    .recommendation a {
      color: white;
      text-decoration: none;
    }
  
    .recommendation a:hover {
      text-decoration: underline;
    }
    
  </style>
<body>
    <div class="row">
        <div class="col-8 offset-2">
            <h3 class="mt-3 offset-3"><%= listing.title %> </h3>
            <div class="card col-6 offset-3 show-card listing-card">
                <img src="<%= listing.image.url%>" class="card-img-top show-img" alt="listing image">
                <div class="card-body">
                    <p class="card-text">
                        <i><b>Owned by </b> <%= listing.owner ? listing.owner.username : "Unknown" %></i>
                    </p>
                    <p class="card-text"><%= listing.description %></p>
                    <p class="card-text"><%= listing.price ? listing.price.toLocaleString("en-IN") : "Not available" %> / night</p>
                    <p class="card-text"><%= listing.location %></p>
                    <p class="card-text"><%= listing.country %></p>
                  
                    <form><button  class="card-text" id="get-recommendations-btn" data-id="<%= listing._id %>">Get Recommendations</button>
                     
                    </form>
                    <br>
                    <div   id="recommendations-container" style=" margin-top:3px none;"  ></div>
                </div>
            </div>
            <br/>
           <% if(currUser && listing.owner && listing.owner._id.equals(currUser._id)) { %>

                <div class="btns">
                    <a href="/listings/<%= listing.id %>/edit" class="btn btn-dark col-1 mb-3 edit-btn offset-3">Edit </a>
                    <form method="POST" action="/listings/<%= listing._id %>?_method=DELETE" class="btn btn-dark mb-3 offset-3">
                        <button type="submit" class="btn btn-dark">Delete</button>
                    </form>
                </div>
      <% } %> 
          
  

          

            <!-- Container to display recommendations -->
             
               
           
            
          
            
            <script>
              
              const btn = document.getElementById('get-recommendations-btn'); // Ensure the button is correctly selected
               btn.addEventListener('click', async function(event) {
                  event.preventDefault();
                  console.log("clicked");
                  const listingId = btn.getAttribute("data-id");  // Get the current listing ID from data-id attribute
                  console.log("listingId at frontend", listingId);
                  const recommendationsContainer = document.getElementById('recommendations-container');   
                  if (recommendationsContainer.style.display === 'none' || recommendationsContainer.style.display === '') {
      recommendationsContainer.style.display = 'grid';
      btn .innerText="close recommendations";
        // Show recommendations
    } else {
      recommendationsContainer.style.display = 'none'; 
      btn .innerText="show recommendations";
       
      return;  // Stop further execution if recommendations are hidden
    }
                  
                  // Change the URL using pushState, updating the browser's URL without page reload
                  const newUrl = `/listings/${listingId}/recommendations`;  // Correct URL construction
                  window.history.pushState({ path: newUrl }, '', newUrl);
            
                  try {
                     // Fetch recommendations from the backend
                     const response = await fetch(newUrl);
            
                     if (response.ok) {
                        const data = await response.json();
                        
                        // Display the recommendations in the container
                      
                        recommendationsContainer.innerHTML = '';  // Clear existing recommendations
                        
                        if (data.recommendations && data.recommendations.length > 0) {
                           data.recommendations.forEach(item => {
                              const recommendationItem = document.createElement('div');
                              recommendationItem.classList.add('recommendation');
                              recommendationItem.style.backgroundColor =  ' #fc515d ';
                              recommendationItem.style.color = 'white';
            recommendationItem.style.padding = '10px';
            recommendationItem.style.marginBottom = '10px';
            recommendationItem.style.fontSize = '14px';
                              const recommendationLink = document.createElement('a');
                              
                                 recommendationLink.href = `/listings/${item._id}`; 
                                   recommendationLink.innerHTML = `<h5>${item.title}</h5><p>${item.description}</p>`;
                                   recommendationItem.appendChild(recommendationLink);
                                   recommendationsContainer.appendChild(recommendationItem);
                           });
                        } else {
                           recommendationsContainer.innerHTML = '<p>No recommendations found</p>';
                        }
                     } else {
                        const data = await response.json();
                        console.error('Error fetching recommendations:', data.error);
                        alert('Error fetching recommendations: ' + data.error);
                     }
                  } catch (error) {
                     console.error('Error fetching recommendations:', error);
                     alert('An error occurred while fetching recommendations.');
                  }
               });
            </script>
            

       
                      <div class="col-8 offset-3 mt-3">
                
                <% if(currUser){%>
                  <hr>
                <h4>Leave a review</h4>
                <form action="/listings/<%= listing._id %>/reviews" method="POST" novalidate class="needs-validation">
                    <!-- Rating and Comment Form -->
                    <div class="mb-3 mt-3">
                        <label for="rating" class="form-label">Rating</label> 
                        <fieldset class="starability-slot">
                            <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                            <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                            <label for="first-rate1" title="Terrible">1 star</label>
                            <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                            <label for="first-rate2" title="Not good">2 stars</label>
                            <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                            <label for="first-rate3" title="Average">3 stars</label>
                            <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                            <label for="first-rate4" title="Very good">4 stars</label>
                            <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                            <label for="first-rate5" title="Amazing">5 stars</label>
                        </fieldset>
                    </div>
                    <div class="mb-3 mt-3">
                        <label for="comment" class="form-label">Comment</label>
                        <textarea required name="review[comment]" id="comment" cols="30" rows="5" class="form-control"></textarea>
                        <div class="invalid-feedback">please add comments for review.</div>
                    </div>
                    <button class="btn btn-outline-dark mb-3 mt-3">Submit</button>
                </form>
                <hr/>
                <% } %>
                
                <% if(listing.reviews.length>0){  %>
                <div class="row">
                  <p><b>All Reviews</b></p>
                    <% for(review of listing.reviews){%>
                    <div class="card col-5 mb-3 ms-3">
                        <div class="card-body">
                            <h6 class="card-title"><b>@<%= review.author.username %></b></h6>
                            <p class="starability-result card-text" data-rating="<%= review.rating %>"></p>
                            <p class="card-text"><%= review.comment %></p>
                        </div>
                        <br>
                        <form class="mb-3" method="POST" action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE">
                            <button class="btn btn-sm btn-dark">Delete</button>
                        </form>
                    </div>
                    <% } %>
                </div>
                <% } %>
              </div>
          <div class="col-8 offset-3 mb-3">
            <h3>Where you'll be</h3>
            <div id="map"></div>
          </div>
         
        
          

        </div>
    </div>  
   
<script src="/js/map.js"></script>
</body>
